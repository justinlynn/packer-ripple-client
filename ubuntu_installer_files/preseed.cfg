# Adapted from the minimal-server-vm preseed (preseed/ubuntu-server-minimal.seed)

# Skip creation of a root account (normal user account will be able to
# use sudo). The default is false; preseed this to true if you want to set
# a root password.
#d-i passwd/root-login boolean false
# Alternatively, to skip creation of a normal user account.
#d-i passwd/make-user boolean false

# To create a normal user account.
d-i passwd/user-fullname string Ubuntu User
d-i passwd/username string ubuntu
# Normal user's password, either in clear text
d-i passwd/user-password password ubuntu
d-i passwd/user-password-again password ubuntu
# or encrypted using an MD5 hash.
#d-i passwd/user-password-crypted password [MD5 hash]
# Create the first user with the specified UID instead of the default.
#d-i passwd/user-uid string 1010
# The installer will warn about weak passwords. If you are sure you know
# what you're doing and want to override it, uncomment this.
d-i user-setup/allow-password-weak boolean true

# The user account will be added to some standard initial groups. To
# override that, use this.
#d-i passwd/user-default-groups string audio cdrom video

# Set to true if you want to encrypt the first user's home directory.
d-i user-setup/encrypt-home boolean false

# Don't install kernel headers.
d-i	base-installer/kernel/headers	boolean false

# Don't even install the standard task.
tasksel	tasksel/skip-tasks	string standard

# Only install basic language packs. Let tasksel ask about tasks.
d-i	pkgsel/language-pack-patterns	string

# No language support packages.
d-i	pkgsel/install-language-support	boolean true

# Only ask the UTC question if there are other operating systems installed.
d-i	clock-setup/utc-auto	boolean true
d-i	time/zone	string	UTC

# Verbose output and no boot splash screen.
d-i	debian-installer/quiet	boolean false
d-i	debian-installer/splash	boolean false

# Install the debconf oem-config frontend (if in OEM mode).
d-i	oem-config-udeb/frontend	string debconf

# Wait for two seconds in grub
d-i	grub-installer/timeout	string 2

# Add the network and tasks oem-config steps by default.
oem-config	oem-config/steps	multiselect language, timezone, keyboard, user, network, tasks

d-i	base-installer/kernel/altmeta	string lts-raring

### Partitioning
## Partitioning example
# If the system has free space you can choose to only partition that space.
# This is only honoured if partman-auto/method (below) is not set.
# Alternatives: custom, some_device, some_device_crypto, some_device_lvm.
#d-i partman-auto/init_automatically_partition select biggest_free

# Alternatively, you may specify a disk to partition. If the system has only
# one disk the installer will default to using that, but otherwise the device
# name must be given in traditional, non-devfs format (so e.g. /dev/hda or
# /dev/sda, and not e.g. /dev/discs/disc0/disc).
# For example, to use the first SCSI/SATA hard disk:
#d-i partman-auto/disk string /dev/sda
# In addition, you'll need to specify the method to use.
# The presently available methods are:
# - regular: use the usual partition types for your architecture
# - lvm:     use LVM to partition the disk
# - crypto:  use LVM within an encrypted partition
d-i partman-auto/method string lvm

# If one of the disks that are going to be automatically partitioned
# contains an old LVM configuration, the user will normally receive a
# warning. This can be preseeded away...
d-i partman-lvm/device_remove_lvm boolean true
# The same applies to pre-existing software RAID array:
d-i partman-md/device_remove_md boolean true
# And the same goes for the confirmation to write the lvm partitions.
d-i partman-lvm/confirm boolean true
d-i partman-lvm/confirm_nooverwrite boolean true

# For LVM partitioning, you can select how much of the volume group to use
# for logical volumes.
d-i partman-auto-lvm/guided_size string max
#d-i partman-auto-lvm/guided_size string 10GB
#d-i partman-auto-lvm/guided_size string 50%

# You can choose one of the three predefined partitioning recipes:
# - atomic: all files in one partition
# - home:   separate /home partition
# - multi:  separate /home, /usr, /var, and /tmp partitions
d-i partman-auto/choose_recipe select atomic

# Or provide a recipe of your own...
# If you have a way to get a recipe file into the d-i environment, you can
# just point at it.
#d-i partman-auto/expert_recipe_file string /hd-media/recipe

# If not, you can put an entire recipe into the preconfiguration file in one
# (logical) line. This example creates a small /boot partition, suitable
# swap, and uses the rest of the space for the root partition:
#d-i partman-auto/expert_recipe string                         \
#      boot-root ::                                            \
#              40 50 100 ext3                                  \
#                      $primary{ } $bootable{ }                \
#                      method{ format } format{ }              \
#                      use_filesystem{ } filesystem{ ext3 }    \
#                      mountpoint{ /boot }                     \
#              .                                               \
#              500 10000 1000000000 ext3                       \
#                      method{ format } format{ }              \
#                      use_filesystem{ } filesystem{ ext3 }    \
#                      mountpoint{ / }                         \
#              .                                               \
#              64 512 300% linux-swap                          \
#                      method{ swap } format{ }                \
#              .

# Balky's set:
#d-i partman-auto/expert_recipe string                         \
#      boot-root ::                                            \
#              40 50 100 ext3                                  \
#                      $primary{ } $bootable{ }                \
#                      method{ format } format{ }              \
#                      use_filesystem{ } filesystem{ ext3 }    \
#                      mountpoint{ /boot }                     \
#              .                                               \
#              500 10000 16000 ext3                            \
##                      $lvmok{ }                               \
##                      in_vg{ hostnamehere }                   \
##                      lv_name{ root }                         \
#                      method{ format } format{ }              \
#                      use_filesystem{ } filesystem{ ext3 }    \
#                      mountpoint{ / }                         \
#              .                                               \
#              500 10000 32000 ext3                            \
##                      $lvmok{ }                               \
##                      in_vg{ hostnamehere }                   \
##                      lv_name{ home }                         \
#                      method{ format } format{ }              \
##                      method{ keep }                          \
#                      use_filesystem{ } filesystem{ ext3 }    \
#                      mountpoint{ /home }                     \
#              .                                               \
##              100 21000 1000000000 ext3	                      \
##                      $defaultignore{ }                       \
##                      $primary{ }                             \
##                      method{ lvm }	                      \
##                      vg_name{ hostnamehere }	              \
##              .                                               \
#              64 512 300% linux-swap                          \
##                      $lvmok{ }                               \
##                      in_vg{ hostnamehere }                   \
##                      lv_name{ swap_1 }                       \
#                      method{ swap } format{ }                \
#              .

# If you just want to change the default filesystem from ext3 to something
# else, you can do that without providing a full recipe.
#d-i partman/default_filesystem string ext4

# The full recipe format is documented in the file partman-auto-recipe.txt
# included in the 'debian-installer' package or available from D-I source
# repository. This also documents how to specify settings such as file
# system labels, volume group names and which physical devices to include
# in a volume group.

# This makes partman automatically partition without confirmation, provided
# that you told it what to do using one of the methods above.
d-i partman-partitioning/confirm_write_new_label boolean true
d-i partman/choose_partition select finish
d-i partman/confirm boolean true
d-i partman/confirm_nooverwrite boolean true


d-i apt-setup/universe boolean true
d-i apt-setup/multiverse boolean true
# Do not ask for a proxy
d-i mirror/http/proxy string

d-i pkgsel/update-policy select none

d-i tasksel/first multiselect 
d-i pkgsel/include string openssh-server curl ufw

d-i grub-installer/only_debian boolean true

### Finishing up the first stage install
# Avoid that last message about the install being complete.
d-i finish-install/reboot_in_progress note

# Allow us to install chef and do setup, we'll secure this later
d-i preseed/late_command string in-target usermod -G sudo -a ubuntu && in-target perl -pe 's/%sudo	ALL=\(ALL:ALL\) ALL/%sudo	ALL=\(ALL:ALL\) NOPASSWD:ALL/g' -i /etc/sudoers
